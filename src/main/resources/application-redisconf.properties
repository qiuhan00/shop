# Redis 配置
redis.default.ttl=1800
## Redis数据库索引（默认为0）
spring.redis.database=0
#spring.redis.host=192.168.158.128
spring.redis.host=xxx.xxx.xxx.xxx
spring.redis.port=6379
#spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
spring.redis.lettuce.pool.max-active=16
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
spring.redis.lettuce.pool.max-wait=-1
## 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
spring.redis.lettuce.pool.max-idle=8
## 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
spring.redis.lettuce.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=1200
######## 特别说明
# 对于redisson，如果pom中引入的是redisson-spring-boot-starter，以上配置不会生效，因为在RedissonAutoConfiguration中配置@AutoConfigureBefore(RedisAutoConfiguration.class)，会优先加载配置，
# 那么会优先创建出RedisConnectionFactory的实现RedissonConnectionFactory。
# 如果pom中导入的仅仅是redisson，那么以上配置生效
# redisson-spring-boot-starter配置
spring.redis.redisson.config=classpath:redisson.yml
# redisson配置
#spring.redis.redisson.address = redis://xxx.xxx.xxx.xxx:6379
#spring.redis.redisson.timeout = 15000
#spring.redis.redisson.password =
#spring.redis.redisson.clientName =
#spring.redis.redisson.connectionMinimumIdleSize = 5
#spring.redis.redisson.connectionPoolSize = 64
#spring.redis.redisson.database = 10
